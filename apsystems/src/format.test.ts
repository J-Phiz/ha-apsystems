import { describe, expect, it } from 'vitest';
import {
  formatHourlyData,
  formatDailyData,
  formatAsStatistics,
  incrementSums,
} from './format.js';

describe('Datas formatter', () => {
  it('Should format the hourly datas properly', () => {
    const result = formatHourlyData(
      '2025-08-10',
      [
        0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.2, 1.1, 1.0, 0.9,
        0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1,
      ],
    );

    expect(result).toEqual([
      { date: '2025-08-10T00:00:00+02:00', value: 0.1 },
      { date: '2025-08-10T01:00:00+02:00', value: 0.2 },
      { date: '2025-08-10T02:00:00+02:00', value: 0.3 },
      { date: '2025-08-10T03:00:00+02:00', value: 0.4 },
      { date: '2025-08-10T04:00:00+02:00', value: 0.5 },
      { date: '2025-08-10T05:00:00+02:00', value: 0.6 },
      { date: '2025-08-10T06:00:00+02:00', value: 0.7 },
      { date: '2025-08-10T07:00:00+02:00', value: 0.8 },
      { date: '2025-08-10T08:00:00+02:00', value: 0.9 },
      { date: '2025-08-10T09:00:00+02:00', value: 1.0 },
      { date: '2025-08-10T10:00:00+02:00', value: 1.1 },
      { date: '2025-08-10T11:00:00+02:00', value: 1.2 },
      { date: '2025-08-10T12:00:00+02:00', value: 1.2 },
      { date: '2025-08-10T13:00:00+02:00', value: 1.1 },
      { date: '2025-08-10T14:00:00+02:00', value: 1.0 },
      { date: '2025-08-10T15:00:00+02:00', value: 0.9 },
      { date: '2025-08-10T16:00:00+02:00', value: 0.8 },
      { date: '2025-08-10T17:00:00+02:00', value: 0.7 },
      { date: '2025-08-10T18:00:00+02:00', value: 0.6 },
      { date: '2025-08-10T19:00:00+02:00', value: 0.5 },
      { date: '2025-08-10T20:00:00+02:00', value: 0.4 },
      { date: '2025-08-10T21:00:00+02:00', value: 0.3 },
      { date: '2025-08-10T22:00:00+02:00', value: 0.2 },
      { date: '2025-08-10T23:00:00+02:00', value: 0.1 },
    ]);
  });

  it('Should format the daily datas properly', () => {
    const result = formatDailyData(
      '2025-08',
      [
        1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.1, 1.11, 1.12, 1.13, 1.14, 1.15,
        1.16, 1.17, 1.18, 1.19, 1.2, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.27, 1.28, 1.29,
      ],
    );

    expect(result).toEqual([
      { date: '2025-08-01T00:00:00+02:00', value: 1.1 },
      { date: '2025-08-02T00:00:00+02:00', value: 1.2 },
      { date: '2025-08-03T00:00:00+02:00', value: 1.3 },
      { date: '2025-08-04T00:00:00+02:00', value: 1.4 },
      { date: '2025-08-05T00:00:00+02:00', value: 1.5 },
      { date: '2025-08-06T00:00:00+02:00', value: 1.6 },
      { date: '2025-08-07T00:00:00+02:00', value: 1.7 },
      { date: '2025-08-08T00:00:00+02:00', value: 1.8 },
      { date: '2025-08-09T00:00:00+02:00', value: 1.9 },
      { date: '2025-08-10T00:00:00+02:00', value: 1.1 },
      { date: '2025-08-11T00:00:00+02:00', value: 1.11 },
      { date: '2025-08-12T00:00:00+02:00', value: 1.12 },
      { date: '2025-08-13T00:00:00+02:00', value: 1.13 },
      { date: '2025-08-14T00:00:00+02:00', value: 1.14 },
      { date: '2025-08-15T00:00:00+02:00', value: 1.15 },
      { date: '2025-08-16T00:00:00+02:00', value: 1.16 },
      { date: '2025-08-17T00:00:00+02:00', value: 1.17 },
      { date: '2025-08-18T00:00:00+02:00', value: 1.18 },
      { date: '2025-08-19T00:00:00+02:00', value: 1.19 },
      { date: '2025-08-20T00:00:00+02:00', value: 1.2 },
      { date: '2025-08-21T00:00:00+02:00', value: 1.21 },
      { date: '2025-08-22T00:00:00+02:00', value: 1.22 },
      { date: '2025-08-23T00:00:00+02:00', value: 1.23 },
      { date: '2025-08-24T00:00:00+02:00', value: 1.24 },
      { date: '2025-08-25T00:00:00+02:00', value: 1.25 },
      { date: '2025-08-26T00:00:00+02:00', value: 1.26 },
      { date: '2025-08-27T00:00:00+02:00', value: 1.27 },
      { date: '2025-08-28T00:00:00+02:00', value: 1.28 },
      { date: '2025-08-29T00:00:00+02:00', value: 1.29 },
      { date: '2025-08-30T00:00:00+02:00', value: 0 },
      { date: '2025-08-31T00:00:00+02:00', value: 0 },
    ]);
  });

  it('Should format statistics', () => {
    const result = formatAsStatistics(
      [
        { date: '2025-08-01T00:00:00+02:00', value: 1.1 },
        { date: '2025-08-02T00:00:00+02:00', value: 1.2 },
        { date: '2025-08-03T00:00:00+02:00', value: 1.3 },
        { date: '2025-08-04T00:00:00+02:00', value: 1.4 },
        { date: '2025-08-05T00:00:00+02:00', value: 1.5 },
        { date: '2025-08-06T00:00:00+02:00', value: 1.6 },
        { date: '2025-08-07T00:00:00+02:00', value: 1.7 },
        { date: '2025-08-08T00:00:00+02:00', value: 1.8 },
        { date: '2025-08-09T00:00:00+02:00', value: 1.9 },
      ],
      10,
    );

    expect(result).toEqual([
      { start: '2025-08-01T00:00:00+02:00', state: 1100, sum: 1100 },
      { start: '2025-08-02T00:00:00+02:00', state: 1200, sum: 2300 },
      { start: '2025-08-03T00:00:00+02:00', state: 1300, sum: 3600 },
      { start: '2025-08-04T00:00:00+02:00', state: 1400, sum: 5000 },
      { start: '2025-08-05T00:00:00+02:00', state: 1500, sum: 6500 },
      { start: '2025-08-06T00:00:00+02:00', state: 1600, sum: 8100 },
      { start: '2025-08-07T00:00:00+02:00', state: 1700, sum: 9800 },
      { start: '2025-08-08T00:00:00+02:00', state: 1800, sum: 11600 },
      { start: '2025-08-09T00:00:00+02:00', state: 1900, sum: 13500 },
    ]);
  });
  it('Should increment sums', () => {
    const result = incrementSums(
      [
        { start: '2025-08-01T00:00:00+02:00', state: 1100, sum: 1100 },
        { start: '2025-08-02T00:00:00+02:00', state: 1200, sum: 2300 },
        { start: '2025-08-03T00:00:00+02:00', state: 1300, sum: 3600 },
        { start: '2025-08-04T00:00:00+02:00', state: 1400, sum: 5000 },
        { start: '2025-08-05T00:00:00+02:00', state: 1500, sum: 6500 },
        { start: '2025-08-06T00:00:00+02:00', state: 1600, sum: 8100 },
        { start: '2025-08-07T00:00:00+02:00', state: 1700, sum: 9800 },
        { start: '2025-08-08T00:00:00+02:00', state: 1800, sum: 11600 },
        { start: '2025-08-09T00:00:00+02:00', state: 1900, sum: 13500 },
      ],
      10000,
    );

    expect(result).toEqual([
      { start: '2025-08-01T00:00:00+02:00', state: 1100, sum: 11100 },
      { start: '2025-08-02T00:00:00+02:00', state: 1200, sum: 12300 },
      { start: '2025-08-03T00:00:00+02:00', state: 1300, sum: 13600 },
      { start: '2025-08-04T00:00:00+02:00', state: 1400, sum: 15000 },
      { start: '2025-08-05T00:00:00+02:00', state: 1500, sum: 16500 },
      { start: '2025-08-06T00:00:00+02:00', state: 1600, sum: 18100 },
      { start: '2025-08-07T00:00:00+02:00', state: 1700, sum: 19800 },
      { start: '2025-08-08T00:00:00+02:00', state: 1800, sum: 21600 },
      { start: '2025-08-09T00:00:00+02:00', state: 1900, sum: 23500 },
    ]);
  });
});
